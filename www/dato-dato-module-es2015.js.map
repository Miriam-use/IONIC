{"version":3,"sources":["./src/app/dato/dato.page.html","./src/app/dato/dato-routing.module.ts","./src/app/dato/dato.module.ts","./src/app/dato/dato.page.scss","./src/app/dato/dato.page.ts"],"names":[],"mappings":"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","file":"dato-dato-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Datos Alumno</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\" > Nombre</ion-label>\\n    <ion-input type=\\\"text\\\" name=\\\"nombre\\\" [(ngModel)]=\\\"heroe.nombre\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\" > Correo Electronico</ion-label>\\n    <ion-input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"heroe.email\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\" > Telefono</ion-label>\\n    <ion-input type=\\\"text\\\" name=\\\"telefono\\\" [(ngModel)]=\\\"heroe.telefono\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\" > Matricula</ion-label>\\n    <ion-input type=\\\"text\\\" name=\\\"matricula\\\" [(ngModel)]=\\\"heroe.matricula\\\"></ion-input>\\n  </ion-item>\\n\\n  <br>\\n  <ion-button color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"saveHeroe()\\\">Guardar</ion-button>\\n\\n  <br>\\n  <ion-button color=\\\"danger\\\" expand=\\\"block\\\" routerLink=\\\"/home\\\">Cancelar</ion-button>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DatoPage } from './dato.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DatoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DatoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DatoPageRoutingModule } from './dato-routing.module';\n\nimport { DatoPage } from './dato.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DatoPageRoutingModule\n  ],\n  declarations: [DatoPage]\n})\nexport class DatoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdG8vZGF0by5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AuthService,  } from \"../services/auth.service\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dato',\n  templateUrl: './dato.page.html',\n  styleUrls: ['./dato.page.scss'],\n})\nexport class DatoPage implements OnInit {\n\n  idSelected:any; //Esta variable se cargará cuando elijamos un alumno, así controlamos si es un alumno nueva o para actualizar\n  show:boolean; //Esta variable contralará cuando queremos que se muestren los campos para introducir o actualizar un alumno\n  heroes = []; //Array donde cargaremos los alumnos que hay en la base de datos y las mostraremos en nuestra page\n  heroe = {id: null, nombre:null, email:null, telefono:null, matricula:null}; //Declaramos un objeto vacio de alumno\n\n  constructor(private router : Router, private db: AngularFireDatabase, public authService : AuthService) { \n    this.show = false; //Inicializamos la variable a false, para que por defecto no se muestren los campos\n    this.idSelected = null; // Inicializamos a null idselected, que significará que no tenemos ningun alumno existente selecionada.\n\n    authService.getHeroes()\n    .subscribe(heroes => {\n      this.heroes = heroes;\n    });//Hacemos una llamada a nuestro servicio, al metodo getHeroes y nos devolvera toda los alumnos que hay en nuestra abase de datos\n    // y las cargaremos en nuestro array\n  }\n\n  ngOnInit() {\n  }\n\n  saveHeroe(){\n    if(this.idSelected != null){//si es diferente a null actualizamos, sino creamos uno nuevo\n      this.authService.updateHeroe(this.heroe);\n    }else{\n      this.authService.saveHeroe(this.heroe);\n    }\n\n    this.clear();\n    \n    this.router.navigate(['/home']);\n  }\n\n  selecHeroe(id : string){ //selecionamos el alumno y mostramos los campos\n    this.show = true;\n\n    this.idSelected = id; //cogemos su id\n\n    let receivedHeroe : any; //declaramos un objeto vacio que será el que reciba la información de el alumno que seleccionamos\n\n    this.authService.getHeroe(id) //hacemos uso de la funcion getHeroe de nuestro servicio\n    .subscribe(heroe => {\n      receivedHeroe = this.heroe; //el objeto vacio recibe la variable\n      this.heroe = receivedHeroe; //Y se lo asignamos al objeto heroe los valores que se han retornado del servicio\n    });\n  }\n\n  removeSelectedHeroe(){\n    //Llamamos a la funcion removeHeroe de nuestro servicio, le pasamos el idselected y se borra ese alumno\n    this.authService.removeHeroe(this.idSelected);\n    this.clear();\n  }\n\n  clear(){\n    //inicializamos los valores de las variables una vez hecha una acción\n    this.show = false;\n    this.idSelected = null;\n    this.heroe.id = null;\n    this.heroe.nombre = null;\n    this.heroe.email = null;\n    this.heroe.telefono = null;\n    this.heroe.matricula = null;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}